{"changed":true,"filter":false,"title":"test_file_PART2.cpp","tooltip":"/test_file_PART2.cpp","value":"/*\nint tempLowVal;\n\n/// for number of rows\nfor(int i = 0; i < rows ; ++i){\n\tfor(int j = 0; j < columns;++j){\n\t/// find lowest elevation change from point\n\t\tif(i == 1){\n\t\t\tgridMatrix[i][j]\n\t\t\n\t\t\n\t\t}\n\t\telse if(i == rows){\n\t\t\t\n\t\t}\n\t\telse{\n\t\t\t\n\t\t}\n\t}\n}\n\n/// find lowest elevation change from point\n\n/// color those points\n\n///\n\n*/","undoManager":{"mark":-344,"position":100,"stack":[[{"start":{"row":176,"column":10},"end":{"row":176,"column":11},"action":"insert","lines":["r"],"id":344}],[{"start":{"row":176,"column":10},"end":{"row":176,"column":11},"action":"remove","lines":["r"],"id":345}],[{"start":{"row":176,"column":9},"end":{"row":176,"column":10},"action":"remove","lines":["i"],"id":346}],[{"start":{"row":176,"column":9},"end":{"row":176,"column":10},"action":"insert","lines":["r"],"id":347}],[{"start":{"row":176,"column":10},"end":{"row":176,"column":11},"action":"insert","lines":["i"],"id":348}],[{"start":{"row":176,"column":11},"end":{"row":176,"column":12},"action":"insert","lines":["x"],"id":349}],[{"start":{"row":176,"column":2},"end":{"row":176,"column":3},"action":"remove","lines":["G"],"id":350}],[{"start":{"row":176,"column":2},"end":{"row":176,"column":3},"action":"insert","lines":["g"],"id":351}],[{"start":{"row":176,"column":12},"end":{"row":176,"column":14},"action":"insert","lines":["[]"],"id":352}],[{"start":{"row":176,"column":13},"end":{"row":176,"column":14},"action":"insert","lines":["i"],"id":353}],[{"start":{"row":176,"column":15},"end":{"row":176,"column":16},"action":"insert","lines":["j"],"id":354}],[{"start":{"row":176,"column":16},"end":{"row":176,"column":17},"action":"insert","lines":["]"],"id":355}],[{"start":{"row":176,"column":16},"end":{"row":176,"column":17},"action":"remove","lines":["]"],"id":356}],[{"start":{"row":176,"column":15},"end":{"row":176,"column":16},"action":"remove","lines":["j"],"id":357}],[{"start":{"row":176,"column":15},"end":{"row":176,"column":17},"action":"insert","lines":["[]"],"id":358}],[{"start":{"row":176,"column":16},"end":{"row":176,"column":17},"action":"insert","lines":["j"],"id":359}],[{"start":{"row":173,"column":31},"end":{"row":174,"column":0},"action":"insert","lines":["",""],"id":360},{"start":{"row":174,"column":0},"end":{"row":174,"column":1},"action":"insert","lines":["\t"]}],[{"start":{"row":174,"column":1},"end":{"row":174,"column":2},"action":"insert","lines":["f"],"id":361}],[{"start":{"row":174,"column":2},"end":{"row":174,"column":3},"action":"insert","lines":["o"],"id":362}],[{"start":{"row":174,"column":3},"end":{"row":174,"column":4},"action":"insert","lines":["r"],"id":363}],[{"start":{"row":174,"column":4},"end":{"row":174,"column":5},"action":"insert","lines":[")"],"id":364}],[{"start":{"row":174,"column":4},"end":{"row":174,"column":5},"action":"remove","lines":[")"],"id":365}],[{"start":{"row":174,"column":4},"end":{"row":174,"column":6},"action":"insert","lines":["()"],"id":366}],[{"start":{"row":174,"column":5},"end":{"row":174,"column":6},"action":"insert","lines":["i"],"id":367}],[{"start":{"row":174,"column":6},"end":{"row":174,"column":7},"action":"insert","lines":["n"],"id":368}],[{"start":{"row":174,"column":7},"end":{"row":174,"column":8},"action":"insert","lines":["t"],"id":369}],[{"start":{"row":174,"column":8},"end":{"row":174,"column":9},"action":"insert","lines":[" "],"id":370}],[{"start":{"row":174,"column":8},"end":{"row":174,"column":9},"action":"remove","lines":[" "],"id":371}],[{"start":{"row":174,"column":7},"end":{"row":174,"column":8},"action":"remove","lines":["t"],"id":372}],[{"start":{"row":174,"column":6},"end":{"row":174,"column":7},"action":"remove","lines":["n"],"id":373}],[{"start":{"row":174,"column":5},"end":{"row":174,"column":6},"action":"remove","lines":["i"],"id":374}],[{"start":{"row":174,"column":4},"end":{"row":174,"column":6},"action":"remove","lines":["()"],"id":375}],[{"start":{"row":174,"column":3},"end":{"row":174,"column":4},"action":"remove","lines":["r"],"id":376}],[{"start":{"row":174,"column":2},"end":{"row":174,"column":3},"action":"remove","lines":["o"],"id":377}],[{"start":{"row":174,"column":1},"end":{"row":174,"column":2},"action":"remove","lines":["f"],"id":378}],[{"start":{"row":174,"column":0},"end":{"row":174,"column":1},"action":"remove","lines":["\t"],"id":379}],[{"start":{"row":173,"column":31},"end":{"row":174,"column":0},"action":"remove","lines":["",""],"id":380}],[{"start":{"row":173,"column":31},"end":{"row":174,"column":0},"action":"insert","lines":["",""],"id":381},{"start":{"row":174,"column":0},"end":{"row":174,"column":1},"action":"insert","lines":["\t"]}],[{"start":{"row":174,"column":1},"end":{"row":174,"column":2},"action":"insert","lines":["f"],"id":382}],[{"start":{"row":174,"column":2},"end":{"row":174,"column":3},"action":"insert","lines":["o"],"id":383}],[{"start":{"row":174,"column":3},"end":{"row":174,"column":4},"action":"insert","lines":["r"],"id":384}],[{"start":{"row":174,"column":4},"end":{"row":174,"column":6},"action":"insert","lines":["()"],"id":385}],[{"start":{"row":174,"column":5},"end":{"row":174,"column":6},"action":"insert","lines":["i"],"id":386}],[{"start":{"row":174,"column":6},"end":{"row":174,"column":7},"action":"insert","lines":["n"],"id":387}],[{"start":{"row":174,"column":7},"end":{"row":174,"column":8},"action":"insert","lines":["t"],"id":388}],[{"start":{"row":174,"column":8},"end":{"row":174,"column":9},"action":"insert","lines":[" "],"id":389}],[{"start":{"row":174,"column":9},"end":{"row":174,"column":10},"action":"insert","lines":["k"],"id":390}],[{"start":{"row":174,"column":9},"end":{"row":174,"column":10},"action":"remove","lines":["k"],"id":391}],[{"start":{"row":174,"column":9},"end":{"row":174,"column":10},"action":"insert","lines":["j"],"id":392}],[{"start":{"row":174,"column":10},"end":{"row":174,"column":11},"action":"insert","lines":[" "],"id":393}],[{"start":{"row":174,"column":11},"end":{"row":174,"column":12},"action":"insert","lines":["="],"id":394}],[{"start":{"row":174,"column":12},"end":{"row":174,"column":13},"action":"insert","lines":[" "],"id":395}],[{"start":{"row":174,"column":13},"end":{"row":174,"column":14},"action":"insert","lines":["0"],"id":396}],[{"start":{"row":174,"column":14},"end":{"row":174,"column":15},"action":"insert","lines":[";"],"id":397}],[{"start":{"row":174,"column":15},"end":{"row":174,"column":16},"action":"insert","lines":[" "],"id":398}],[{"start":{"row":174,"column":16},"end":{"row":174,"column":17},"action":"insert","lines":["j"],"id":399}],[{"start":{"row":174,"column":17},"end":{"row":174,"column":18},"action":"insert","lines":[" "],"id":400}],[{"start":{"row":174,"column":18},"end":{"row":174,"column":19},"action":"insert","lines":["<"],"id":401}],[{"start":{"row":174,"column":19},"end":{"row":174,"column":20},"action":"insert","lines":[" "],"id":402}],[{"start":{"row":174,"column":20},"end":{"row":174,"column":21},"action":"insert","lines":["c"],"id":403}],[{"start":{"row":174,"column":21},"end":{"row":174,"column":22},"action":"insert","lines":["o"],"id":404}],[{"start":{"row":174,"column":22},"end":{"row":174,"column":23},"action":"insert","lines":["l"],"id":405}],[{"start":{"row":174,"column":23},"end":{"row":174,"column":24},"action":"insert","lines":["u"],"id":406}],[{"start":{"row":174,"column":24},"end":{"row":174,"column":25},"action":"insert","lines":["m"],"id":407}],[{"start":{"row":174,"column":25},"end":{"row":174,"column":26},"action":"insert","lines":["n"],"id":408}],[{"start":{"row":174,"column":26},"end":{"row":174,"column":27},"action":"insert","lines":["s"],"id":409}],[{"start":{"row":174,"column":27},"end":{"row":174,"column":28},"action":"insert","lines":[";"],"id":410}],[{"start":{"row":174,"column":28},"end":{"row":174,"column":29},"action":"insert","lines":["+"],"id":411}],[{"start":{"row":174,"column":29},"end":{"row":174,"column":30},"action":"insert","lines":["+"],"id":412}],[{"start":{"row":174,"column":30},"end":{"row":174,"column":31},"action":"insert","lines":["j"],"id":413}],[{"start":{"row":174,"column":32},"end":{"row":174,"column":33},"action":"insert","lines":["{"],"id":414}],[{"start":{"row":174,"column":33},"end":{"row":176,"column":2},"action":"insert","lines":["","\t\t","\t}"],"id":415}],[{"start":{"row":176,"column":1},"end":{"row":176,"column":2},"action":"remove","lines":["}"],"id":416}],[{"start":{"row":176,"column":0},"end":{"row":176,"column":1},"action":"remove","lines":["\t"],"id":417}],[{"start":{"row":175,"column":2},"end":{"row":176,"column":0},"action":"remove","lines":["",""],"id":418}],[{"start":{"row":175,"column":1},"end":{"row":175,"column":2},"action":"remove","lines":["\t"],"id":419}],[{"start":{"row":175,"column":0},"end":{"row":175,"column":1},"action":"remove","lines":["\t"],"id":420}],[{"start":{"row":174,"column":33},"end":{"row":175,"column":0},"action":"remove","lines":["",""],"id":421}],[{"start":{"row":176,"column":1},"end":{"row":176,"column":2},"action":"insert","lines":["\t"],"id":422}],[{"start":{"row":177,"column":1},"end":{"row":177,"column":2},"action":"insert","lines":["\t"],"id":423}],[{"start":{"row":180,"column":1},"end":{"row":180,"column":2},"action":"insert","lines":["\t"],"id":424}],[{"start":{"row":181,"column":1},"end":{"row":181,"column":2},"action":"insert","lines":["\t"],"id":425}],[{"start":{"row":182,"column":0},"end":{"row":182,"column":1},"action":"insert","lines":["\t"],"id":426}],[{"start":{"row":183,"column":0},"end":{"row":183,"column":1},"action":"insert","lines":["\t"],"id":427}],[{"start":{"row":184,"column":0},"end":{"row":184,"column":1},"action":"insert","lines":["\t"],"id":428}],[{"start":{"row":185,"column":0},"end":{"row":185,"column":1},"action":"insert","lines":["\t"],"id":429}],[{"start":{"row":186,"column":1},"end":{"row":186,"column":2},"action":"insert","lines":["\t"],"id":430}],[{"start":{"row":187,"column":0},"end":{"row":187,"column":1},"action":"insert","lines":["\t"],"id":431}],[{"start":{"row":188,"column":0},"end":{"row":188,"column":1},"action":"insert","lines":["}"],"id":432}],[{"start":{"row":170,"column":0},"end":{"row":195,"column":0},"action":"remove","lines":["int tempLowVal;","","/// for number of rows","for(int i = 0; i < rows ; ++i){","\tfor(int j = 0; j < columns;++j){","\t/// find lowest elevation change from point","\t\tif(i == 1){","\t\t\tgridMatrix[i][j]","\t\t","\t\t","\t\t}","\t\telse if(i == rows){","\t\t\t","\t\t}","\t\telse{","\t\t\t","\t\t}","\t}","}","","/// find lowest elevation change from point","","/// color those points","","///",""],"id":433}],[{"start":{"row":0,"column":0},"end":{"row":170,"column":0},"action":"remove","lines":["#include <iostream>","#include <string>","#include <fstream>","#include <vector>","","using namespace std;","","int main(){","    ","    int rows;","    int columns;","    string fileName;","    ","    ","    // ask or file name and height and width","    cout << \"What is the number of rows? \" << endl;","    cin >> rows;","    cout << \"What is the number of columns? \" << endl;","    cin >> columns;","    cout << \"What is the name of the file?\" << endl;","    cin >> fileName;","    ","    ","    ","    ","    ","    ifstream myFile;","\tmyFile.open(fileName);","\tint filePosition = 0;","","\tvector<int> values;","\t","\t//loads data into 1D matrix","\tif (myFile) {","\t\tint value;","\t\twhile (myFile >> value) {","\t\t\tvalues.push_back(value);","\t\t}","","\t}","\t","\t/*","\t//outputs data of 1D matrix","\tfor (int i=0;i<values.size();++i){","\t    cout << values.at(i) << \" \";","\t}","\t*/","\t","\tcout << endl << endl << endl;","\t","\t//set height width and initialize 2D matrix","\t// int rows = 100;","\t// int columns = 100;","\tvector<vector<int>> gridMatrix;","\t","    ","    //resizes matrix to given m*n dimensions","    gridMatrix.resize(rows);","    for(int i = 0 ; i < rows ; ++i)","    {","        //Grow Columns by n","        gridMatrix[i].resize(columns);","    }","\t","\t// assigns values to resized matrix","\tint valuesPosition = 0;","\tfor(int i=0;i<rows;++i){","\t    for(int j=0;j<columns;++j){","\t        gridMatrix[i][j] = values.at(valuesPosition);","\t        ++valuesPosition;","\t        // cout << gridMatrix[i][j] << \" \" ;","\t        ","\t    }","\t}","\t","    //find min and max values in 2 vector","    double tempMax = gridMatrix[0][0];","    int maxRow;","    int maxColumn;","","    double tempMin = gridMatrix[0][0];","    int minRow = 0;","    int minColumn = 0;","    ","    ","    for(int i=0;i<rows ;++i){","\t    for(int j=0;j<columns ;++j){","\t        if ( gridMatrix[i][j] > tempMax){","\t            tempMax = gridMatrix[i][j];","\t            maxRow = i;","\t            maxColumn = j;","\t        }","\t    }","\t}","\t","\tfor(int i=0;i<rows ;++i){","\t    for(int j=0;j<columns ;++j){","\t        if ( gridMatrix[i][j] < tempMin){","\t            tempMin = gridMatrix[i][j];","\t            minRow = i;","\t            minColumn = j;","\t        }","\t    }","\t}","\t","\tcout << endl << endl << endl;","\tcout << maxRow << \" \" << maxColumn << \" \" << tempMax << endl;","\tcout << minRow << \" \" << minColumn << \" \" << tempMin << endl;","\t","\t//intitialize and resize 2D vectors for R G and B","\tvector<vector<int>> red;","    red.resize(rows);","    for(int i = 0 ; i < rows ; ++i)","    {","        red[i].resize(columns);","    }","    vector<vector<int>> green;","    green.resize(rows);","    for(int i = 0 ; i < rows ; ++i)","    {","        green[i].resize(columns);","    }","    vector<vector<int>> blue;","\tblue.resize(rows);","    for(int i = 0 ; i < rows ; ++i)","    {","        blue[i].resize(columns);","    }","\t","\t","\t// store color values in 3 parallel vectors for R G and B","\tint colorVal;","\t","\tfor(int i=0;i<rows ;++i){","\t    for(int j=0;j<columns ;++j){","\t        colorVal = ( (gridMatrix[i][j] - tempMin) / (tempMax - tempMin) ) * 255;","\t        red[i][j] = colorVal;","\t        green[i][j] = colorVal;","\t        blue[i][j] = colorVal;","\t        // cout << green[i][j] << \" \";","\t        }","\t    }","\t    ","\t    ","\t    ","\t // output RGB values to ppm file","\t","\t// create output file name for string ","\tstring outputFileName = fileName + \".ppm\";","    cout << outputFileName;","\t ","    ofstream outputFile;","    outputFile.open (outputFileName);","    outputFile << \"P3\" << endl;","    outputFile << columns << \" \" << rows << endl;","    outputFile << 255 << endl;","    for(int i = 0; i < rows; ++i){","        for(int j = 0; j < columns ; ++j){","            outputFile << red[i][j] << \" \" << green[i][j] << \" \" <<  blue[i][j] << \" \";","        }","        outputFile << endl;","    }","    ","    ","    outputFile.close();","    return 0;","\t","\t///","}","",""],"id":434},{"start":{"row":0,"column":0},"end":{"row":25,"column":0},"action":"insert","lines":["int tempLowVal;","","/// for number of rows","for(int i = 0; i < rows ; ++i){","\tfor(int j = 0; j < columns;++j){","\t/// find lowest elevation change from point","\t\tif(i == 1){","\t\t\tgridMatrix[i][j]","\t\t","\t\t","\t\t}","\t\telse if(i == rows){","\t\t\t","\t\t}","\t\telse{","\t\t\t","\t\t}","\t}","}","","/// find lowest elevation change from point","","/// color those points","","///",""]}],[{"start":{"row":0,"column":0},"end":{"row":1,"column":0},"action":"insert","lines":["",""],"id":435}],[{"start":{"row":0,"column":0},"end":{"row":0,"column":1},"action":"insert","lines":["?"],"id":436}],[{"start":{"row":0,"column":1},"end":{"row":0,"column":2},"action":"insert","lines":["8"],"id":437}],[{"start":{"row":0,"column":1},"end":{"row":0,"column":2},"action":"remove","lines":["8"],"id":438}],[{"start":{"row":0,"column":0},"end":{"row":0,"column":1},"action":"remove","lines":["?"],"id":439}],[{"start":{"row":0,"column":0},"end":{"row":0,"column":1},"action":"insert","lines":["/"],"id":440}],[{"start":{"row":0,"column":1},"end":{"row":0,"column":2},"action":"insert","lines":["*"],"id":441}],[{"start":{"row":26,"column":0},"end":{"row":27,"column":0},"action":"insert","lines":["",""],"id":442}],[{"start":{"row":27,"column":0},"end":{"row":27,"column":1},"action":"insert","lines":["*"],"id":443}],[{"start":{"row":27,"column":1},"end":{"row":27,"column":2},"action":"insert","lines":["/"],"id":444}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":27,"column":2},"end":{"row":27,"column":2},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1508268837730}